body {
  font-family: sans-serif;
  font-size: 11.5pt;
  margin: 8px;
  background-color: #444;
  color: white;
}

.dropShade {
  display: none; position: absolute; top: 0; left: 0; right: 0; bottom: 0;
  align-items: center;
  justify-content: center;
  background: radial-gradient(rgba(0,160,255,0.85), #0000);
  color: white;
  text-shadow: 0px 1px 5px black, 0px 1px 5px black, 0px 2px 3px black;
  font-size: 3vmin;
  box-shadow: inset 0 0 5vmax rgba(0,160,255,1);
  z-index: 100;
  pointer-events: none;
  text-align: center;
}
.dragOver > .dropShade::before { content: 'You can drop the file here'; }
.dropShade.faded::before { opacity: 0.25; }
.dragOver > .dropShade { display: flex; }

.dropBox {
  position: relative;
  cursor: pointer;
  user-select: none;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 256px;
  height: 256px;
  box-shadow: inset 0px 3px 7px #0008;
  border: 2px solid #585858;
  border-radius: 5px;
  box-sizing: border-box;
  padding: 8px;
  color: #ccc;
  text-align: center;
}

.dropBox:focus {
  box-shadow: inset 0 0 2px 3px #5cf;
  border-color: #49b;
}

.dropBox > input[type=file] {
  display: none;
}

.result canvas {
  max-width: 100%;
  max-height: calc(100vh - 16px);
  cursor: pointer;
}

.template {
  display: none;
}

.processNode {
  border: 2px solid #333;
  border-radius: 5px;
  box-shadow: 0 0 0 3px #fff1;
  display: flex;
  flex-direction: column;
  margin: 8px;
  font-size: 11.5pt;
  max-width: 640px;
  transition: transform 0.1s ease-in-out;
  background-color: #444;
}

.processNode.moving {
  transition: none;
  z-index: 1;
}

.processNode > .title {
  text-align: center;
  padding: 8px;
  box-shadow: inset 0 0 5px #0008;
  border-radius: 3px 3px 0 0;  
  position: relative;
  touch-action: none;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.processNode > .title > .caption {
  display: inline-block;
  flex: 1 1 0;
  text-align: center;
}

.processNode > .contents {
  box-shadow: inset 0 1px #fff1;
}

.processNode .propertyName, .processNode > .title {
  user-select: none;
}

.processNodeArray {
  display: flex;
  flex-direction: column;
}

.processNodeArray.refreshing > .processNode {
  transition: none;
}

.propertySheet {
  list-style: none;
  padding: 0;
  margin: 0;
}

.propertySheet > .propertySheetItem {
  box-sizing: border-box;
  display: flex;
  align-items: center;
}

.propertySheet > .propertySheetItem.vertical {
  flex-direction: column;
  align-items: stretch;
}

.propertySheet > .propertySheetItem > .propertyName,
.propertySheet > .propertySheetItem > .propertyValue {
  flex: 1 1 0;
  box-sizing: border-box;
  padding: 2px;
  vertical-align: middle;
}

.propertySheet > .propertySheetItem > .propertyName {
  text-align: right;
  margin-right: 4px;
}

.propertySheet > .propertySheetItem.vertical > .propertyName {
  text-align: center;
  margin-right: 0;
}

.propertySheet > .propertySheetItem > .propertyValue {
  margin-left: 4px;
}

.propertySheet > .propertySheetItem.vertical > .propertyValue {
  margin-left: 0;
}

.propertySheet > .propertySheetItem > .propertyValue * {
  vertical-align: middle;
}

.exponentialSlider {
  display: flex;
}

.exponentialSlider > input[type=range] {
  flex: 1 1 128px;
}

.colorEditor {
  display: flex;
  align-items: center;
}

.colorEditor > input[type=range] {
  flex: 1 1 128px;
}

.addPanel {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
}

.addPanel button {
  border: none;
  border-radius: 12px;
  padding: 8px 16px;
  box-shadow: inset 0 0 5px #0008, 0 2px 5px #0004;
  margin: 4px;
  box-sizing: border-box;
  flex: 1 1 100px;
  text-overflow: ellipsis;
}

.addPanel button:active {
  transform: translate(0, 2px);
  box-shadow: inset 0 0 5px #0008, 0 0 5px #0004;
  background-image: linear-gradient(to top, #fff2, #0002);
}

.itemControls {
  display: inline-flex;
  align-items: center;
}

.itemControls > button {
  position: relative;
  background: none;
  opacity: 0.5;
  color: inherit;
  border: 1px solid;
  margin: 2px;
  border-radius: 9px;
  line-height: 12px;
  padding-bottom: 1px;
  box-sizing: border-box;
  width: 26px;
  height: 20px;
  transition: transform 0.1s ease-in-out;
  display: inline-flex;
  align-items: center;
  justify-content: center;
}

.itemControls > button:active {
  opacity: 1;
  transform: scale(1.15);
}

.itemControls > button.down::before {
  content: "";
  display: inline-block;
  border: 5px solid;
  border-top-width: 10px;
  border-left-color: transparent;
  border-right-color: transparent;
  border-bottom-width: 0;
  width: 0;
  height: 0;
}

.itemControls > button.up::before {
  content: "";
  display: inline-block;
  border: 5px solid;
  border-bottom-width: 10px;
  border-left-color: transparent;
  border-right-color: transparent;
  border-top-width: 0;
  width: 0;
  height: 0;
  transform: translate(0, -1px);
}

.itemControls > button.delete::before,
.itemControls > button.delete::after {
  content: "";
  position: absolute;
  background-color: currentColor;
  width: 2px;
  height: 10px;
  top: 50%;
  left: 50%;
  transform: translate(-1px, -5px) rotate(45deg);
}

.itemControls > button.delete::before {
  transform: translate(-1px, -5px) rotate(-45deg);
}

.itemControls > button.replace::before,
.itemControls > button.replace::after {
  content: "";
  position: absolute;
  background-color: currentColor;
  width: 2px;
  height: 10px;
  top: 50%;
  left: 50%;
  transform-origin: 50% 100%;
  transform: translate(-1px, -7px) rotate(45deg) translate(0, 0.5px);
}

.itemControls > button.replace::after {
  transform: translate(-1px, -7px) rotate(-45deg) translate(0, 0.5px);
}

.itemControls > button.duplicate::before,
.itemControls > button.duplicate::after {
  content: "";
  position: absolute;
  border: 2px solid currentColor;
  border-bottom-color: transparent;
  border-left-color: transparent;
  border-radius: 2px;
  width: 5px;
  height: 5px;
  top: 50%;
  left: 50%;
  transform: translate(-3px, -6px);
  font-size: 5px;
  line-height: 5px;
  text-align: center;
}

.itemControls > button.duplicate::after {
  border: 2px solid currentColor;
  transform: translate(-6px, -3px);
  background-image: radial-gradient(currentColor 50%, transparent 55%);
}

.imageView {
  border: 2px solid #333;
  border-radius: 5px;
  box-shadow: 0 0 0 3px #fff1;
  display: inline-flex;
  flex-direction: column;
  margin: 2px;
  min-width: min(300px, calc(100vw - 32px));
  max-width: 100vw;
  max-height: 100vh;
}

.imageView > .title {
  text-align: center;
  padding: 4px;
  position: relative;
  line-height: 28px;
}

.imageView .close {
  position: absolute;
  color: #ccc;
  border: 2px solid currentColor;
  border-radius: 50%;
  width: 24px;
  height: 24px;
  left: 6px;
  top: 5px;
  box-sizing: border-box;
  background: #444;
  box-shadow: 0 2px 3px #0008;
  transition: transform 200ms ease-in-out, background-color 50ms linear;
}

.imageView .close:hover {
  transform: scale(1.5) rotate(180deg);
}

.imageView .close:active {
  background: rgb(41, 52, 82);
  transform: scale(1.25) rotate(180deg);
  transition: transform 100ms ease-in-out, background-color 50ms linear;
}

.imageView .close::after,
.imageView .close::before {
  content: "";
  position: absolute;
  background: currentColor;
  height: 14px;
  width: 2px;
  top: 3px;
  left: 9px;
  transform: rotate(-45deg);
}

.imageView .close::after {
  transform: rotate(45deg);
}

.imageView > .contents {
  overflow: hidden;
  max-width: calc(100vw - 32px);
  max-height: calc(100vh - 32px);
  touch-action: none;
}

.imageView > .contents > * {
  transform-origin: 0 0;
  image-rendering: pixelated;
  image-rendering: -moz-crisp-edges;
  image-rendering: crisp-edges;
}

.pipelines {
  float: left;
}

.imageViewers > * {
  vertical-align: top;
}
